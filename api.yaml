s is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Recycling 
  description: Recycling API
  version: "1.0.0"
# the domain of the service
host: sustainablecorvallis.org
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /
produces:
  - application/json
paths:
  /businesses:
    get:
      summary: All Businesses
      description: |
        The businesses endpoint returns information about the recycling businesses that will take unwanted objects. The response includes the business address, contact information, and geolocation information for each business.
      parameters:
        - name: recyclable
          in: query
          description: recyclable
          required: true
          type: string
          format: string
      tags:
        - Business
      responses:
        200:
          description: An array of businesses
          schema:
            type: array 
            items: 
            $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /businesses/recycling:
    get:
      summary: Recycling Businesses
      description: |
        The recycling endpoint returns information about the recycling businesses that will take unwanted objects. The response includes the business address, contact information, and geolocation information for each business.
      parameters:
        - name: recyclable
          in: query
          description: recyclable
          required: true
          type: string
          format: string
      tags:
        - Business
      responses:
        200:
          description: An array of businesses
          schema:
            type: array 
            items: 
            $ref: '#/definitions/Business'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /businesses/repair:
    get:
      summary: Repair Businesses
      description: |
        The repair endpoint returns an array of repair businesses including location, contact information, and geolocation information.
      parameters:
        - name: service
          in: query
          description: The kind of repair service
          required: true
          type: number
          format: double
        - name: start_longitude
          in: query
          description: Longitude component of start location.
          required: true
          type: number
          format: double
        - name: end_latitude
          in: query
          description: Latitude component of end location.
          required: true
          type: number
          format: double
        - name: end_longitude
          in: query
          description: Longitude component of end location.
          required: true
          type: number
          format: double
      tags: 
        - Estimates
      responses:
        200:
          description: An array of price estimates by product
          schema:
            type: array
            items:
              $ref: '#/definitions/PriceEstimate'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /estimates/time:
    get:
      summary: Time Estimates
      description: The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.
      parameters:
        - name: start_latitude
          in: query
          description: Latitude component of start location.
          required: true
          type: number
          format: double
        - name: start_longitude
          in: query
          description: Longitude component of start location.
          required: true
          type: number
          format: double
        - name: customer_uuid
          in: query
          type: string
          format: uuid
          description: Unique customer identifier to be used for experience customization.
        - name: product_id
          in: query
          type: string
          description: Unique identifier representing a specific product for a given latitude & longitude.
      tags:
        - Estimates
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me:
    get:
      summary: User Profile
      description: The User Profile endpoint returns information about the Uber user that has authorized with the application.
      tags:
        - User
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /history:
    get:
      summary: User Activity
      description: The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          description: Offset the list of returned results by this amount. Default is zero.
        - name: limit
          in: query
          type: integer
          format: int32
          description: Number of items to retrieve. Default is 5, maximum is 100.
      tags:
        - User
      responses:
        200:
          description: History information for the given user
          schema:
            $ref: '#/definitions/Activities'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
definitions:
  Business:
    type: object
    properties:
      business_id:
        type: string
        description: Unique identifier representing buisness.
      description:
        type: string
        description: Description of buisness.
      display_name:
        type: string
        description: Display the name of the business.
      geolocation:
        type: string
        description: Geolocation of business
      image:
        type: string
        description: Image URL representing the product.
      address:
        type: string
        description: Address of the business.
      phone:
        type: string
        description: Phone number of the buisness.
      url:
        type: string
        description: url of buisness.
  Recyclable:
    type: object
    properties:
      recyclable_id:
        type: string
        description: ID of recyclable.
      display_name:
        type: string
        description: Display name of recyclable.
      description:
        type: string
        description: Description of recyclable.
      category:
        type: string
        description: Category of recyclable. 
  Recyclable_Categories:
    type: object
    properties:
      _id: 
        type: string
        description: ID of Recyclable_Categories
  
  Service_Categories:
    type: object
    properties:
      _id: 
        type: string
        description: ID of Service_Categories
  Service:
    type: object
    properties:
      service_id:
        type: string
        description: ID of service.
      service_name:
        type: string
        description: Display name of service.
      service_description:
        type: string
        description: Description of service.
      category:
        type: string
        description: Category of service. 
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string


